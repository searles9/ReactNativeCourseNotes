{"ast":null,"code":"import { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport CategoriesScreen from \"./screens/CategoriesScreen\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport MealsOverviewScreen from \"./screens/MealsOverviewScreen\";\nimport MealsDetailScreen from \"./screens/MealsDetailScreen\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport FavoritesScreen from \"./screens/FavoritesScreen\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { Provider } from 'react-redux';\nimport { store } from \"./store/redux/store\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar Drawer = createDrawerNavigator();\nfunction DrawerNavigator() {\n  return _jsxs(Drawer.Navigator, {\n    screenOptions: {\n      headerStyle: {\n        backgroundColor: \"#351401\"\n      },\n      headerTintColor: \"white\",\n      sceneContainerStyle: {\n        backgroundColor: \"#3f2f25\"\n      },\n      drawerContentStyle: {\n        backgroundColor: \"#351401\"\n      },\n      drawerInactiveTintColor: \"white\",\n      drawerActiveTintColor: \"#351401\",\n      drawerActiveBackgroundColor: \"#e4baa1\"\n    },\n    children: [_jsx(Drawer.Screen, {\n      name: \"Categories\",\n      component: CategoriesScreen,\n      options: {\n        title: \"All Categories\",\n        drawerIcon: function drawerIcon(_ref) {\n          var color = _ref.color,\n            size = _ref.size;\n          return _jsx(Ionicons, {\n            name: \"list\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    }), _jsx(Drawer.Screen, {\n      name: \"Favorites\",\n      component: FavoritesScreen,\n      options: {\n        drawerIcon: function drawerIcon(_ref2) {\n          var color = _ref2.color,\n            size = _ref2.size;\n          return _jsx(Ionicons, {\n            name: \"star\",\n            color: color,\n            size: size\n          });\n        }\n      }\n    })]\n  });\n}\nexport default function App() {\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      style: \"light\"\n    }), _jsx(Provider, {\n      store: store,\n      children: _jsx(NavigationContainer, {\n        children: _jsxs(Stack.Navigator, {\n          initialRouteName: \"Drawer\",\n          screenOptions: {\n            headerStyle: {\n              backgroundColor: \"#351401\"\n            },\n            headerTintColor: \"white\",\n            contentStyle: {\n              backgroundColor: \"#3f2f25\"\n            }\n          },\n          children: [_jsx(Stack.Screen, {\n            name: \"Drawer\",\n            component: DrawerNavigator,\n            options: {\n              title: \"All Categories\",\n              headerShown: false\n            }\n          }), _jsx(Stack.Screen, {\n            name: \"MealsOverview\",\n            component: MealsOverviewScreen\n          }), _jsx(Stack.Screen, {\n            name: \"MealDetail\",\n            component: MealsDetailScreen,\n            options: {\n              title: \"About the Meal\"\n            }\n          })]\n        })\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","CategoriesScreen","NavigationContainer","createNativeStackNavigator","MealsOverviewScreen","MealsDetailScreen","createDrawerNavigator","FavoritesScreen","Ionicons","Provider","store","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Stack","Drawer","DrawerNavigator","Navigator","screenOptions","headerStyle","backgroundColor","headerTintColor","sceneContainerStyle","drawerContentStyle","drawerInactiveTintColor","drawerActiveTintColor","drawerActiveBackgroundColor","children","Screen","name","component","options","title","drawerIcon","_ref","color","size","_ref2","App","style","initialRouteName","contentStyle","headerShown","styles","create","container","flex","alignItems","justifyContent"],"sources":["C:/Users/Owner/Documents/GitHub/ReactNativeCourseNotes/09 - Redux/Project09/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet } from \"react-native\";\nimport CategoriesScreen from \"./screens/CategoriesScreen\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport MealsOverviewScreen from \"./screens/MealsOverviewScreen\";\nimport MealsDetailScreen from \"./screens/MealsDetailScreen\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport FavoritesScreen from \"./screens/FavoritesScreen\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { Provider } from 'react-redux'\nimport { store } from './store/redux/store'\n\nconst Stack = createNativeStackNavigator();\nconst Drawer = createDrawerNavigator();\n\nfunction DrawerNavigator() {\n  return (\n    <Drawer.Navigator\n      screenOptions={{\n        headerStyle: { backgroundColor: \"#351401\" },\n        headerTintColor: \"white\",\n        sceneContainerStyle: { backgroundColor: \"#3f2f25\" },\n        drawerContentStyle: { backgroundColor: \"#351401\" },\n        drawerInactiveTintColor: \"white\",\n        drawerActiveTintColor: \"#351401\",\n        drawerActiveBackgroundColor: \"#e4baa1\",\n      }}\n    >\n      <Drawer.Screen\n        name=\"Categories\"\n        component={CategoriesScreen}\n        options={{\n          title: \"All Categories\",\n          drawerIcon: ({ color, size }) => (\n            <Ionicons name=\"list\" color={color} size={size} />\n          ),\n        }}\n      />\n      <Drawer.Screen\n        name=\"Favorites\"\n        component={FavoritesScreen}\n        options={{\n          drawerIcon: ({ color, size }) => (\n            <Ionicons name=\"star\" color={color} size={size} />\n          ),\n        }}\n      />\n    </Drawer.Navigator>\n  );\n}\n\nexport default function App() {\n  return (\n    <>\n      <StatusBar style=\"light\" />\n      <Provider store={store}>\n        <NavigationContainer>\n          <Stack.Navigator\n            initialRouteName=\"Drawer\"\n            screenOptions={{\n              headerStyle: { backgroundColor: \"#351401\" },\n              headerTintColor: \"white\",\n              contentStyle: { backgroundColor: \"#3f2f25\" },\n            }}\n          >\n            <Stack.Screen\n              name=\"Drawer\"\n              component={DrawerNavigator}\n              options={{\n                title: \"All Categories\",\n                headerShown: false,\n              }}\n            />\n            <Stack.Screen\n              name=\"MealsOverview\"\n              component={MealsOverviewScreen}\n            />\n            <Stack.Screen\n              name=\"MealDetail\"\n              component={MealsDetailScreen}\n              options={{\n                title: \"About the Meal\",\n              }}\n            />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </Provider>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}